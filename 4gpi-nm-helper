#!/bin/bash

CONFIG=/etc/default/4gpi
TIMEOUT=10

VERSION="2.1"

USAGE="Usage: 4gpi-nm-helper COMMAND [PARAM...]

Commands:
  set default apn <apn> user <user> password <password> [type {IP|IPV6|IPV4V6}]
                                        set default PDP context

  show default {apn|user|password|type|all}
                                        show default PDP context

  clear default                         clear default PDP context

  version                               display version and exit
  help                                  display help and exit
"

#
# Usage: 4gpi_chat <COMMANDS>
#
4gpi_chat ()
{
  local script

  script="ABORT BUSY ABORT ERROR $*"

  eval chat -t $TIMEOUT $script < $CONSOLE_PORT > $CONSOLE_PORT
}

#
# Usage: 4gpi_chat_e <COMMANDS>
#
4gpi_chat_e ()
{
  local script

  script="ABORT BUSY ABORT ERROR $*"

  eval chat -e -t $TIMEOUT $script < $CONSOLE_PORT > $CONSOLE_PORT
}

#
# Usage: nm_show <NAME> [ apn | user | password | type ]
#
nm_show ()
{
  local cont
  local auth
  local apn
  local user
  local pass
  local type

  if [ "$1" != "default" ]
  then
    return 1
  fi

  4gpi_chat "'' AT OK-AT-OK ''"
  cont=$(4gpi_chat_e "'' AT+CGDCONT? OK ''" 2>&1)
  auth=$(4gpi_chat_e "'' AT+CGAUTH? OK ''" 2>&1)

  apn=$(echo "$cont" | grep "CGDCONT: 1" | cut -d, -f3 | sed -e 's/"//g')
  user=$(echo "$auth" | grep "CGAUTH: 1" | cut -d, -f3 | sed -e 's/"//g')
  pass=$(echo "$auth" | grep "CGAUTH: 1" | cut -d, -f4 | sed -e 's/"//g')
  type=$(echo "$cont" | grep "CGDCONT: 1" | cut -d, -f2 | sed -e 's/"//g')

  case "$2" in
    "apn")
      echo $apn
      ;;
    "user")
      echo $user
      ;;
    "password")
      echo $pass
      ;;
    "type")
      echo $type
      ;;
    *)
      echo $apn $user $pass $type
      ;;
  esac
}

#
# Usage: nm_set <NAME> <PARAMS...>
#
nm_set ()
{
  local apn
  local user
  local pass
  local type
  local default
  local params

  apn=""
  user=""
  pass=""
  type="IPV4V6"
  params=($@)
  params=(${params[@]:1})

  if [ "$1" != "default" ]
  then
    return 1
  fi

  while [ $params ]
  do
    case "${params[0]}" in
      "apn")
        apn=${params[1]}
        params=(${params[@]:2})
        ;;
      "user")
        user=${params[1]}
        params=(${params[@]:2})
        ;;
      "password")
        pass=${params[1]}
        params=(${params[@]:2})
        ;;
      "type")
        type=${params[1]}
        params=(${params[@]:2})
        ;;
      *)
        echo $apn $user $pass $type
        params=(${params[@]:1})
        ;;
    esac
  done

  current=($(nm_show $1))
  if [ "${current[0]}" != "$apn" ] || [ "${current[3]}" != "$type" ]
  then
    4gpi_chat "'' AT OK-AT-OK AT+CFUN=4 OK ''"
    4gpi_chat "'' AT+CGDCONT=1,\\\"$type\\\",\\\"$apn\\\" OK ''"
  fi
  if [ "${current[1]}" != "$user" ] || [ "${current[2]}" != "$pass" ]
  then
    4gpi_chat "'' AT OK-AT-OK AT+CFUN=4 OK ''"
    4gpi_chat "'' AT+CGAUTH=1,3,\\\"$pass\\\",\\\"$user\\\" OK ''"
  fi

  4gpi_chat "'' AT OK-AT-OK AT+CFUN=1 OK ''"
}

#
# Usage: nm_clr <NAME>
#
nm_clr ()
{
  if [ "$1" != "default" ]
  then
    return 1
  fi

  4gpi_chat "'' AT OK-AT-OK AT+CFUN=4 OK ''"
  4gpi_chat "'' AT+CGDCONT=1 OK ''"
  4gpi_chat "'' AT+CGAUTH=1 OK ''"
  4gpi_chat "'' AT OK-AT-OK AT+CFUN=1 OK ''"
}

[ -r $CONFIG ] && . $CONFIG

args=($@)

#
# execute command
#
case $1 in
  show)
    nm_show "$2" "$3"
    ;;
  set)
    nm_set "$2" "${args[@]:2}"
    ;;
  clear)
    nm_clr "$2"
    ;;
  version)
    echo "4gpi-nm-helper version $VERSION"
    ;;
  help)
    echo "$USAGE"
    ;;
  *)
    echo "$USAGE"
    exit 1
    ;;
esac
